plugins {
	id 'jacoco'
}
dependencies {
	compile project(':de.uniba.swt.dsl')
	testCompile "org.junit.jupiter:junit-jupiter-api:${junitversion}"
	testCompile "org.junit.jupiter:junit-jupiter-params:${junitversion}"
	testRuntime 'org.junit.jupiter:junit-jupiter-engine'
	testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.testing:${xtextVersion}"
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}

jacocoTestReport {
	// additionalSourceDirs.setFrom(fileTree("${project.projectDir.parent}/de.uniba.swt.dsl/src"))

	// excluded some built-packages generated by Xtext
	// serializer is not used (generate the model back to source code)
	final mainClasses = fileTree(
			dir: "${project.projectDir.parent}/de.uniba.swt.dsl/build/classes",
			excludes: [
					'**/antlr/internal/',
					'**/bahn/util',
					'**/bahn/impl',
					'**/serializer',
					'**/generator.externals/**']
	)
	additionalClassDirs.setFrom(mainClasses)

	reports {
		html.enabled true
	}
}

//this is an eclipse plugin project
eclipseClasspath.enabled=false
cleanEclipseClasspath.enabled=false
